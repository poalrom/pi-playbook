- name: Create obsidian-livesync directory
  ansible.builtin.file:
    path: "{{ services.obsidian_livesync.config_path }}"
    state: directory
    mode: "0755"

- name: Template docker-compose for obsidian-livesync
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ services.obsidian_livesync.config_path }}/docker-compose.yml"
    mode: "0644"
  notify: Restart obsidian-livesync

- name: Start obsidian-livesync
  community.docker.docker_compose_v2:
    project_src: "{{ services.obsidian_livesync.config_path }}"
    state: present

- name: Wait for CouchDB to be ready
  ansible.builtin.wait_for:
    host: "127.0.0.1"
    port: "{{ services.obsidian_livesync.port }}"
    delay: 10
    timeout: 60

- name: Configure CouchDB for Obsidian LiveSync
  tags: ["skip_ansible_lint"]
  ansible.builtin.shell: |
    curl -s https://raw.githubusercontent.com/vrtmrz/obsidian-livesync/main/utils/couchdb/couchdb-init.sh | bash
  environment:
    hostname: "http://{{ obsidian_livesync_db_user }}:{{ obsidian_livesync_db_password }}@127.0.0.1:{{ services.obsidian_livesync.port }}"
    username: "{{ obsidian_livesync_db_user }}"
    password: "{{ obsidian_livesync_db_password }}"
  register: couchdb_config_result
  failed_when: couchdb_config_result.rc != 0
  changed_when: true

- name: Install Deno
  tags: ["skip_ansible_lint"]
  ansible.builtin.shell: |
    curl -fsSL https://deno.land/install.sh | sh

- name: Generate Obsidian LiveSync setup URI
  ansible.builtin.shell: |
    {{ ansible_env.HOME }}/.deno/bin/deno run -A https://raw.githubusercontent.com/vrtmrz/obsidian-livesync/main/utils/flyio/generate_setupuri.ts
  environment:
    hostname: "{{ services.obsidian_livesync.domain }}"
    database: "obsidian-livesync"
    passphrase: "{{ obsidian_livesync_passphrase }}"
    username: "{{ obsidian_livesync_db_user }}"
    password: "{{ obsidian_livesync_db_password }}"
  register: setup_uri_result
  changed_when: false

- name: Display setup URI
  ansible.builtin.debug:
    msg: "{{ setup_uri_result.stdout }}"
